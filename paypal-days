#!/usr/bin/python2
import csv
import sys
from datetime import *
from decimal import *
import config
types=config.types
excludeNames=config.excludeNames
names=set()
def getPaypalDays(filename):
    with open(filename, "r") as file:
        reader=csv.DictReader(file, delimiter=",", quotechar="\"")
        days={}
        for row in reader:
            row={
                    key.lower().strip():
                        val.decode("iso-8859-1").encode("utf8")
                    for
                        (key,val)
                    in
                        row.items()
                    }
            if(row["type"] in ["Payment Sent", "Payment For"]):
                names.add(row["name"])
            if((row["type"] in types) and (row["name"] not in excludeNames)):
                date=datetime.strptime(row["date"], "%d/%m/%Y")
                key=date.strftime("%Y-%m-%d")
                gross=Decimal(row["gross"].replace(",", ""))
                if(not key in days):
                    days[key]={"total": Decimal(0), "parts": [], "date": date}
                days[key]["total"]+=gross
                days[key]["parts"].append('{0}: {1} (${2})'.format(
                    row["type"],
                    row["name"],
                    str(gross)
                    ))
        return days

def blank(days, start):
    day=start
    for n in xrange(0, days):
        print('{0},'.format(day.strftime("%Y-%m-%d")))
        day = day+timedelta(1)

days=sorted(getPaypalDays(sys.argv[1]).items())
def printDays(days):
    prev=days[0][1]["date"]
    prev=date(prev.year, prev.month, 1)
    blank(1, prev)
    for d, item in days:
        blank((item["date"].date()-prev).days-1, prev+timedelta(1))
        print("{0}, {1}, {2}".format(d, item["total"], ", ".join(item["parts"])))
        prev=item["date"].date()
if(len(sys.argv) > 2 and sys.argv[2] == "names"):
    print("\"" + ('",\n"'.join(names)) + "\"")
else:
    printDays(days)
